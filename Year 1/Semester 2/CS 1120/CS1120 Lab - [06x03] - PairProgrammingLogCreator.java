package pairprogramminglog;

import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Marcel Englmaier
 */
public class PairProgrammingLogCreator extends javax.swing.JFrame
{
    String Driver;
    String Navigator;
    String temp;
    
    Scanner scanFile;
    PrintWriter writeFile;
    int lines;
    int i = 0;
    GregorianCalendar timeStamp = new GregorianCalendar();
    File inputFile = new File("Log.txt");
    String [] log;
    String full = "";
    
    public PairProgrammingLogCreator() throws IOException{
        try
        {
            scanFile = new Scanner(inputFile);
        }
        catch(IOException e)
        {
            JOptionPane.showMessageDialog(null, "File Does Not Exist. Please add File and restart", "Error", JOptionPane.ERROR_MESSAGE);;
            System.exit(0);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonExit = new javax.swing.JButton();
        fieldDriver = new javax.swing.JTextField();
        fieldNavigator = new javax.swing.JTextField();
        labelDriver = new javax.swing.JLabel();
        labelNavigator = new javax.swing.JLabel();
        buttonBegin = new javax.swing.JButton();
        buttonEnd = new javax.swing.JButton();
        buttonSwap = new javax.swing.JButton();
        labelStatus = new javax.swing.JLabel();
        labelStatusLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldLog = new javax.swing.JTextArea();
        fieldRecord = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programmin Logger");

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        labelDriver.setText("Driver: ");

        labelNavigator.setText("Navigator: ");

        buttonBegin.setText("Begin");
        buttonBegin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBeginActionPerformed(evt);
            }
        });

        buttonEnd.setText("End");
        buttonEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEndActionPerformed(evt);
            }
        });

        buttonSwap.setText("Swap Roles");
        buttonSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSwapActionPerformed(evt);
            }
        });

        labelStatusLabel.setText("Status: ");

        fieldLog.setColumns(20);
        fieldLog.setRows(5);
        jScrollPane1.setViewportView(fieldLog);

        fieldRecord.setText("What was done during the session?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonBegin)
                        .addGap(18, 18, 18)
                        .addComponent(buttonEnd)
                        .addGap(18, 18, 18)
                        .addComponent(buttonSwap)
                        .addGap(26, 26, 26)
                        .addComponent(labelStatusLabel)
                        .addGap(18, 18, 18)
                        .addComponent(labelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDriver)
                        .addGap(18, 18, 18)
                        .addComponent(fieldDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelNavigator)
                        .addGap(18, 18, 18)
                        .addComponent(fieldNavigator, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(buttonExit))
                    .addComponent(fieldRecord))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDriver)
                    .addComponent(labelNavigator)
                    .addComponent(fieldNavigator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExit))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStatusLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonBegin)
                        .addComponent(buttonEnd)
                        .addComponent(buttonSwap)))
                .addGap(18, 18, 18)
                .addComponent(fieldRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBeginActionPerformed
        try
        {
            readLog();
            writeLog(true);
            displayLog();
        }
        catch(IOException e)
        {
            JOptionPane.showMessageDialog(null, "File Error", "Error", JOptionPane.ERROR_MESSAGE);;
        }
    }//GEN-LAST:event_buttonBeginActionPerformed

    private void buttonEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEndActionPerformed
        try
        {
            readLog();
            writeLog(false);
            displayLog();
        }
        catch(IOException e)
        {
            JOptionPane.showMessageDialog(null, "File Error", "Error", JOptionPane.ERROR_MESSAGE);;
        }
    }//GEN-LAST:event_buttonEndActionPerformed

    private void buttonSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSwapActionPerformed
        temp = fieldDriver.getText();
        fieldDriver.setText(fieldNavigator.getText());
        fieldNavigator.setText(temp);
    }//GEN-LAST:event_buttonSwapActionPerformed

    public void readLog() throws IOException
    {
        scanFile = new Scanner(inputFile);
        lines = scanFile.nextInt();
        scanFile.nextLine();
        i = 0;
        log = new String[lines];
        for(i = 0; i < lines; i++)
        {
            log[i] = scanFile.nextLine();
            full = full + "\n" + log[i];
        }
        scanFile.close();
    }
    
    public void writeLog(boolean s) throws IOException
    {
        i = 0;
        lines = lines + 1;
        timeStamp.setTimeInMillis(System.currentTimeMillis());
        writeFile = new PrintWriter(new FileOutputStream("Log.txt"));
        String addition = "";
        writeFile.println(lines);
        for(i = 0; i < lines - 1; i++)
        {
            writeFile.println(log[i]);
        }
        if(s)
        {
            addition =  "Begin: Driver-" + fieldDriver.getText() + ", Navigator-" + fieldNavigator.getText() + " @ " + timeStamp.getTime();
            writeFile.println(addition);
            labelStatus.setText("Begin Written");
        }
        else
        {
            addition =  "End:   Driver-" + fieldDriver.getText() + ", Navigator-" + fieldNavigator.getText() + " @ " + timeStamp.getTime() + "  Record: " + fieldRecord.getText();
            writeFile.println(addition);
            labelStatus.setText("End Written");
            fieldRecord.setText("What was done during the session?");
        }
        writeFile.close();
    }
    
    public void displayLog() throws IOException
    {
        scanFile = new Scanner(inputFile);
        lines = scanFile.nextInt();
        scanFile.nextLine();
        i = 0;
        full = "";
        for(i = 0; i < lines; i++)
        {
            full += "\n" + scanFile.nextLine();
        }
        fieldLog.setText(full);
        scanFile.close();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PairProgrammingLogCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PairProgrammingLogCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PairProgrammingLogCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PairProgrammingLogCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run(){
                try {
                    new PairProgrammingLogCreator().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(PairProgrammingLogCreator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBegin;
    private javax.swing.JButton buttonEnd;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonSwap;
    public javax.swing.JTextField fieldDriver;
    private javax.swing.JTextArea fieldLog;
    public javax.swing.JTextField fieldNavigator;
    private javax.swing.JTextField fieldRecord;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDriver;
    private javax.swing.JLabel labelNavigator;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelStatusLabel;
    // End of variables declaration//GEN-END:variables
}
